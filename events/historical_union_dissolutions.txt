namespace = historical_union_dissolution

#Malaysia
historical_union_dissolution.1 = {
    type = country_event

    title = malaysia_singapore.t 				# Title of the event; ADD LOCALISATION
    desc = malaysia_singapore.d 				# Description of the event; ADD LOCALISATION
    #flavor = malaysia_singapore.f 				# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/event_icons/waving_flag.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:MSY
		this = c:MSY											# Change TAG of the overlord ****
		game_date >= 1965.8.9									# START DATE: Date colony became self governing ****
		game_date < 1975.8.9									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		#Member state conditions
		exists = c:SGP
		c:SGP = { 												# Change TAG of the transferee ****
			is_direct_subject_of = ROOT
			is_subject_type = subject_type_special_administrative_region
		}
		
		# Event has not been fired before
		NOT = { has_variable = malaysia_singapore_hud }			# CHANGE ****
		
    }
    
    option = {
        name = historical_union_dissolution.option.1			# Accept secesssion
        highlighted_option = yes
		
		#Subject becomes independent
		c:SGP = { 												# Change TAG of the colony ****
			make_independent = yes
			effect_starting_politics_parliamentary_republic = yes
		}
		
		#British protection continues over expelled state
		if = {
			limit = {
				c:MSY = { is_direct_subject_of = c:GBR }
			}
			c:GBR = {
				create_diplomatic_pact = {
					country = c:SGP
					type = protectorate
				}
			}
		}
		
		# Fire only once
		set_variable = malaysia_singapore_hud					# Change variable ****
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_union_dissolution.option.2			# Refuse secesssion
		default_option = yes
		
		# Internal unrest
		every_scope_state = {
			add_radicals_in_state = {
				culture = cu:malay
				value = large_radicals
			}
			add_modifier = { name = nationalist_agitation months = 60 is_decaying = yes } 
		}
		c:SGP = {
			every_scope_state = {
				add_radicals_in_state = {
					culture = cu:malay
					value = large_radicals
				}
				add_modifier = { name = nationalist_agitation months = 60 is_decaying = yes } 
			}
		}
		
		# Fire only once
		set_variable = malaysia_singapore_hud					# Change variable ****
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

#Rhodesia & Nyasaland
historical_union_dissolution.2 = {
    type = country_event

    title = CAF_rhodesia.t 					# Title of the event; ADD LOCALISATION
    desc = CAF_rhodesia.d 					# Description of the event; ADD LOCALISATION
    #flavor = CAF_rhodesia.f 				# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/event_icons/waving_flag.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:GBR this = c:GBR											# Change TAG of the overlord ****
		game_date >= 1963.12.31									# START DATE: Date colony became self governing ****
		game_date < 1973.12.31									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		#Member state conditions
		exists = c:CAF
		c:CAF = { 												# Change TAG of the transferee ****
			is_direct_subject_of = ROOT
			is_not_sufficiently_independent = yes
		}
		
		# Event has not been fired before
		NOT = { has_variable = CAF_rhodesia_hud }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Generate list of provinces to be released				# DO NOT TOUCH THIS SECTION
		c:CAF = {
			every_scope_state = {
				limit = {
					state_region = { is_homeland = cu:zambian }		# Change homeland identity to match colony to be released ****
					is_incorporated = no							# State is a colony
					#contains_capital_of = c:ZAM					# State is the capital of colony ****
				}
				save_scope_as = colonial_state_1
			}
			every_scope_state = {
				limit = {
					state_region = { is_homeland = cu:malawian }	# Change homeland identity to match colony to be released ****
					is_incorporated = no							# State is a colony
					#contains_capital_of = c:MLW					# State is the capital of colony ****
				}
				save_scope_as = colonial_state_2
			}
		}
		
	}
    
    option = {
        name = historical_union_dissolution.option.1		# Accept secesssion
        highlighted_option = yes
		
		
		#Subject becomes independent
		c:CAF = { 											# Change TAG of the colony ****
			make_independent = yes
			
			change_tag = RHO
		}
		
		c:RHO = {
			#Release Zambia
			create_country = {
				tag = ZAM										# Change TAG of country being released ****
				origin = ROOT									# TAG where the created country takes tech from
				state = scope:colonial_state_1
			
				on_created = {									# Set government laws & rulers here
				
					# SET laws for colony ****
					effect_starting_politics_constitutional_monarchy = yes
					effect_starting_politics_democratic = yes
					effect_starting_politics_constitutional_unitary_state = yes
					effect_starting_politics_war_policy_anti_military = yes
					effect_starting_politics_economic_policy_interventionism = yes
					effect_starting_politics_trade_policy_protectionism = yes
					effect_starting_politics_anti_nuclear_policy = yes
				
					# CREATE leader for colony ****
					create_character = {
						first_name = "guy_incognito_first_name"		# CHANGE
						last_name = "guy_incognito_last_name"		# CHANGE
						ruler = yes
						#birth_date = 1910.1.1						# CHANGE
						interest_group = ig_rural_folk				# CHANGE
						ideology = ideology_democratic				# CHANGE
						traits = {
							charismatic								# CHANGE
							persistent								# CHANGE
							meticulous								# CHANGE
						}
					}
				
					# Set diplomatic recognition
					set_country_type = unrecognized
				}
			}
			every_scope_state = {
				limit = {
					state_region = { is_homeland = cu:zambian }		# Change homeland identity to match colony to be released ****
				}
				set_state_owner = c:ZAM								# Change TAG to colony ****
			}
			
			#Release Malawi
			create_country = {
				tag = MLW										# Change TAG of country being released ****
				origin = ROOT									# TAG where the created country takes tech from
				state = scope:colonial_state_2
			
				on_created = {									# Set government laws & rulers here
				
					# SET laws for colony ****
					effect_starting_politics_constitutional_monarchy = yes
					effect_starting_politics_democratic = yes
					effect_starting_politics_constitutional_unitary_state = yes
					effect_starting_politics_war_policy_anti_military = yes
					effect_starting_politics_economic_policy_interventionism = yes
					effect_starting_politics_trade_policy_protectionism = yes
					effect_starting_politics_anti_nuclear_policy = yes
				
					# CREATE leader for colony ****
					create_character = {
						first_name = "guy_incognito_first_name"		# CHANGE
						last_name = "guy_incognito_last_name"		# CHANGE
						ruler = yes
						#birth_date = 1910.1.1						# CHANGE
						interest_group = ig_rural_folk				# CHANGE
						ideology = ideology_democratic				# CHANGE
						traits = {
							charismatic								# CHANGE
							persistent								# CHANGE
							meticulous								# CHANGE
						}
					}
				
					# Set diplomatic recognition
					set_country_type = unrecognized
				}
			}
			every_scope_state = {
				limit = {
					state_region = { is_homeland = cu:malawian }		# Change homeland identity to match colony to be released ****
				}
				set_state_owner = c:MLW									# Change TAG to colony ****
			}
		}
		
		#Rhodesia becomes a dominion
		create_diplomatic_pact = {
			country = c:RHO
			type = dominion
		}
		
		#Zambia & Malawi are given self-government
		create_diplomatic_pact = {
			country = c:ZAM
			type = semi_autonomous_colony
		}
		create_diplomatic_pact = {
			country = c:MLW
			type = semi_autonomous_colony
		}
		
		# Fire only once
		set_variable = CAF_rhodesia_hud						# Change variable ****
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_union_dissolution.option.2		# Refuse secesssion
		default_option = yes
		
		# Internal unrest
		c:CAF = {
			every_scope_state = {
				add_radicals_in_state = {
					value = large_radicals
				}
				add_modifier = { name = nationalist_agitation months = 60 is_decaying = yes } 
			}
		}
		
		# Fire only once
		set_variable = CAF_rhodesia_hud						# Change variable ****
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

#United Arab Republic
historical_union_dissolution.3 = {
    type = country_event

    title = uar_syria.t 				# Title of the event; ADD LOCALISATION
    desc = uar_syria.d 					# Description of the event; ADD LOCALISATION
    #flavor = uar_syria.f 				# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/event_icons/waving_flag.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:UAR
		this = c:UAR											# Change TAG of the overlord ****
		game_date >= 1961.9.28									# START DATE: Date colony became self governing ****
		game_date < 1971.9.28									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_nationalist_government = yes						# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		#Release country
		NOT = { 												# Colony to be released must not already exist on the map
			exists = c:SYR										# Change TAG of the colony ****
		}
		any_scope_state = { 									# Overlord owns the states of the colony to be released
			state_region = { is_homeland = cu:syrian }			# Change homeland identity to match colony to be released ****
		}
		
		# Event has not been fired before
		NOT = { has_variable = uar_syria_hud }					# CHANGE ****
		
    }
	
	immediate = {
	
		# Generate list of provinces to be released				# DO NOT TOUCH ROOT SECTION
		every_scope_state = {
			limit = {
				state_region = { is_homeland = cu:syrian }		# Change homeland identity to match colony to be released ****
				#contains_capital_of = c:SYR					# State is the capital of colony ****
			}
			save_scope_as = colonial_state
		}
	
		# Fire only once
		set_variable = uar_syria_hud							# Change variable ****
	
	}
    
    option = {
        name = historical_union_dissolution.option.1			# Accept secesssion
        highlighted_option = yes
		
		#Subject becomes independent
		create_country = {
			tag = SYR										# Change TAG of country being released ****
			origin = ROOT									# TAG where the created country takes tech from
			state = scope:colonial_state
			
			on_created = {									# Set government laws & rulers here
				
				set_variable = UAR_formed_before
				
				# SET laws for colony ****
				effect_starting_politics_nationalist_republic = yes
				effect_starting_politics_dictatorship = yes
				effect_starting_politics_war_policy_jingoism = yes
				effect_starting_politics_economic_policy_state_capitalism = yes
				effect_socialist_ruling_coalition = yes
				
				# CREATE leader for colony ****
				create_character = {
					first_name = "guy_incognito_first_name"		# CHANGE
					last_name = "guy_incognito_last_name"		# CHANGE
					ruler = yes
					#birth_date = 1910.1.1						# CHANGE
					interest_group = ig_rural_folk				# CHANGE
					ideology = ideology_democratic				# CHANGE
					traits = {
						charismatic								# CHANGE
						persistent								# CHANGE
						meticulous								# CHANGE
					}
				}
				
				# Set diplomatic recognition
				set_country_type = unrecognized
			}
		}
		every_scope_state = {
			limit = {
		 		state_region = { is_homeland = cu:syrian }	# Change homeland identity to match colony to be released ****
		 	}
			set_state_owner = c:SYR								# Change TAG to colony ****
		}
		
		#Return to being Egypt
		change_tag = EGY
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_union_dissolution.option.2			# Refuse secesssion
		default_option = yes
		
		# Internal unrest
		custom_tooltip = {
			text = everyone_is_angry_custom_tooltip
			every_scope_state = {
				add_radicals_in_state = {
					culture = cu:syrian
					value = large_radicals
				}
				add_modifier = { name = nationalist_agitation months = 60 is_decaying = yes } 
			}
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

#West Indies Federation
historical_union_dissolution.4 = {
    type = country_event

    title = west_indies_dissolution.t 				# Title of the event; ADD LOCALISATION
    desc = west_indies_dissolution.d 				# Description of the event; ADD LOCALISATION
    #flavor = west_indies_dissolution.f 			# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/event_icons/waving_flag.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:GBR
		this = c:GBR											# Change TAG of the overlord ****
		game_date >= 1962.5.31									# START DATE: Date colony became self governing ****
		game_date < 1972.5.31									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democratic_monarchy = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		#Member state conditions
		exists = c:WIF
		c:WIF = { 												# Change TAG of the transferee ****
			is_direct_subject_of = ROOT
			is_not_sufficiently_independent = yes
		}
		
		# Event has not been fired before
		NOT = { has_variable = west_indies_dissolution_hud }	# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = west_indies_dissolution_hud				# Change variable ****
	
	}
    
    option = {
        name = historical_union_dissolution.option.1			# Accept secesssion
        highlighted_option = yes
		
		#WIF release states
		c:WIF = {
			
			#Saint Kitts & Nevis
			create_country = {
				tag = SKN										# Change TAG of country being released ****
				origin = c:WIF									# TAG where the created country takes tech from
				province = p:x89337A
			
				on_created = {									# Set government laws & rulers here
				
					# SET laws for colony ****
					effect_starting_politics_constitutional_monarchy = yes
					effect_starting_politics_democratic = yes
					effect_starting_politics_constitutional_unitary_state = yes
					effect_starting_politics_war_policy_anti_military = yes
					effect_starting_politics_economic_policy_interventionism = yes
					effect_starting_politics_trade_policy_protectionism = yes
					effect_starting_politics_anti_nuclear_policy = yes
				
					# Set diplomatic recognition
					set_country_type = unrecognized
					
					# Overlord create Personal Union pact with colony
					c:GBR = { create_diplomatic_pact = { country = c:SKN type = personal_union } }
					
				}
			}
			
			#Antigua & Barbuda
			create_country = {
				tag = AAB										# Change TAG of country being released ****
				origin = c:WIF									# TAG where the created country takes tech from
				province = p:x89334D
			
				on_created = {									# Set government laws & rulers here
				
					# SET laws for colony ****
					effect_starting_politics_constitutional_monarchy = yes
					effect_starting_politics_democratic = yes
					effect_starting_politics_constitutional_unitary_state = yes
					effect_starting_politics_war_policy_anti_military = yes
					effect_starting_politics_economic_policy_interventionism = yes
					effect_starting_politics_trade_policy_protectionism = yes
					effect_starting_politics_anti_nuclear_policy = yes
				
					# Set diplomatic recognition
					set_country_type = unrecognized
					
					# Overlord create Personal Union pact with colony
					c:GBR = { create_diplomatic_pact = { country = c:AAB type = personal_union } }
					
				}
			}
			
			#Dominica
			create_country = {
				tag = DMC										# Change TAG of country being released ****
				origin = c:WIF									# TAG where the created country takes tech from
				province = p:x70F001
			
				on_created = {									# Set government laws & rulers here
				
					# SET laws for colony ****
					effect_starting_politics_constitutional_monarchy = yes
					effect_starting_politics_democratic = yes
					effect_starting_politics_constitutional_unitary_state = yes
					effect_starting_politics_war_policy_anti_military = yes
					effect_starting_politics_economic_policy_interventionism = yes
					effect_starting_politics_trade_policy_protectionism = yes
					effect_starting_politics_anti_nuclear_policy = yes
				
					# Set diplomatic recognition
					set_country_type = unrecognized
					
					# Overlord create Personal Union pact with colony
					c:GBR = { create_diplomatic_pact = { country = c:DMC type = personal_union } }
					
				}
			}
			
			#Saint Lucia
			create_country = {
				tag = STL										# Change TAG of country being released ****
				origin = c:WIF									# TAG where the created country takes tech from
				province = p:x5299CA
			
				on_created = {									# Set government laws & rulers here
				
					# SET laws for colony ****
					effect_starting_politics_constitutional_monarchy = yes
					effect_starting_politics_democratic = yes
					effect_starting_politics_constitutional_unitary_state = yes
					effect_starting_politics_war_policy_anti_military = yes
					effect_starting_politics_economic_policy_interventionism = yes
					effect_starting_politics_trade_policy_protectionism = yes
					effect_starting_politics_anti_nuclear_policy = yes
				
					# Set diplomatic recognition
					set_country_type = unrecognized
					
					# Overlord create Personal Union pact with colony
					c:GBR = { create_diplomatic_pact = { country = c:STL type = personal_union } }
					
				}
			}
			
			#Saint Vincent & the Grenadines
			create_country = {
				tag = SVG										# Change TAG of country being released ****
				origin = c:WIF									# TAG where the created country takes tech from
				province = p:x446C63
			
				on_created = {									# Set government laws & rulers here
				
					# SET laws for colony ****
					effect_starting_politics_constitutional_monarchy = yes
					effect_starting_politics_democratic = yes
					effect_starting_politics_constitutional_unitary_state = yes
					effect_starting_politics_war_policy_anti_military = yes
					effect_starting_politics_economic_policy_interventionism = yes
					effect_starting_politics_trade_policy_protectionism = yes
					effect_starting_politics_anti_nuclear_policy = yes
				
					# Set diplomatic recognition
					set_country_type = unrecognized
					
					# Overlord create Personal Union pact with colony
					c:GBR = { create_diplomatic_pact = { country = c:SVG type = personal_union } }
					
				}
			}
			
			#Grenada
			create_country = {
				tag = GND										# Change TAG of country being released ****
				origin = c:WIF									# TAG where the created country takes tech from
				province = p:xF0F001
			
				on_created = {									# Set government laws & rulers here
				
					# SET laws for colony ****
					effect_starting_politics_constitutional_monarchy = yes
					effect_starting_politics_democratic = yes
					effect_starting_politics_constitutional_unitary_state = yes
					effect_starting_politics_war_policy_anti_military = yes
					effect_starting_politics_economic_policy_interventionism = yes
					effect_starting_politics_trade_policy_protectionism = yes
					effect_starting_politics_anti_nuclear_policy = yes
				
					# Set diplomatic recognition
					set_country_type = unrecognized
					
					# Overlord create Personal Union pact with colony
					c:GBR = { create_diplomatic_pact = { country = c:GND type = personal_union } }
					
				}
			}
			
			#Barbados
			create_country = {
				tag = BAR										# Change TAG of country being released ****
				origin = c:WIF									# TAG where the created country takes tech from
				province = p:x445B6C
			
				on_created = {									# Set government laws & rulers here
				
					# SET laws for colony ****
					effect_starting_politics_constitutional_monarchy = yes
					effect_starting_politics_democratic = yes
					effect_starting_politics_constitutional_unitary_state = yes
					effect_starting_politics_war_policy_anti_military = yes
					effect_starting_politics_economic_policy_interventionism = yes
					effect_starting_politics_trade_policy_protectionism = yes
					effect_starting_politics_anti_nuclear_policy = yes
				
					# Set diplomatic recognition
					set_country_type = unrecognized
					
					# Overlord create Personal Union pact with colony
					c:GBR = { create_diplomatic_pact = { country = c:BAR type = personal_union } }
					
				}
			}
			
			#Trinidad & Tobago
			create_country = {
				tag = TAT										# Change TAG of country being released ****
				origin = c:WIF									# TAG where the created country takes tech from
				province = p:x707080 
				province = p:xD496B1
			
				on_created = {									# Set government laws & rulers here
				
					# SET laws for colony ****
					effect_starting_politics_constitutional_monarchy = yes
					effect_starting_politics_democratic = yes
					effect_starting_politics_constitutional_unitary_state = yes
					effect_starting_politics_war_policy_anti_military = yes
					effect_starting_politics_economic_policy_interventionism = yes
					effect_starting_politics_trade_policy_protectionism = yes
					effect_starting_politics_anti_nuclear_policy = yes
				
					# Set diplomatic recognition
					set_country_type = unrecognized
					
					# Overlord create Personal Union pact with colony
					c:GBR = { create_diplomatic_pact = { country = c:TAT type = personal_union } }
					
				}
			}
			
			#Jamaica
			create_country = {
				tag = JAM										# Change TAG of country being released ****
				origin = c:WIF									# TAG where the created country takes tech from
				province = p:x535B49
				province = p:x7070B8
			
				on_created = {									# Set government laws & rulers here
				
					# SET laws for colony ****
					effect_starting_politics_constitutional_monarchy = yes
					effect_starting_politics_democratic = yes
					effect_starting_politics_constitutional_unitary_state = yes
					effect_starting_politics_war_policy_anti_military = yes
					effect_starting_politics_economic_policy_interventionism = yes
					effect_starting_politics_trade_policy_protectionism = yes
					effect_starting_politics_anti_nuclear_policy = yes
				
					# Set diplomatic recognition
					set_country_type = unrecognized
					
					# Overlord create Personal Union pact with colony
					c:GBR = { create_diplomatic_pact = { country = c:JAM type = personal_union } }
					
				}
			}
			
		}
		
		#GBR annexes the remainder
		annex = c:WIF
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_union_dissolution.option.2			# Refuse secesssion
		default_option = yes
		
		c:WIF = {
		
			# Internal unrest
			every_scope_state = {
				add_radicals_in_state = {
					value = large_radicals
				}
				add_modifier = { name = nationalist_agitation months = 60 is_decaying = yes } 
			}
			
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

#Netherlands-Indonesia Confederation
historical_union_dissolution.5 = {
    type = country_event

    title = NET_IDO.t 					# Title of the event; ADD LOCALISATION
    desc = NET_IDO.d 					# Description of the event; ADD LOCALISATION
    #flavor = NET_IDO.f 				# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/event_icons/waving_flag.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:IDO
		this = c:IDO											# Change TAG of the overlord ****
		game_date >= 1956.1.1									# START DATE: Date colony became self governing ****
		game_date < 1966.1.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		NOT = { is_a_democracy = yes }							# Correct gov types
		is_subject_type = subject_type_confederal_state			# is_vassal = no
		exists = c:NET
		is_direct_subject_of = c:NET
		is_at_war = no											# war = no
		
		# Event has not been fired before
		NOT = { has_variable = NET_IDO_hud }					# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = NET_IDO_hud								# Change variable ****
	
	}
    
    option = {
        name = historical_union_dissolution.option.1			# Accept secesssion
        highlighted_option = yes
		
		#Becomes independent
		make_independent = yes
		
		#Lose relations with NET
		change_relations = { country = ROOT value = -100 }
		
		#Prestige from victory!
		add_modifier = { 
			name = national_pride_modifier 
			years = 5
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_union_dissolution.option.2			# Refuse secesssion
		default_option = yes
		
		# Internal unrest
		custom_tooltip = {
			text = everyone_is_angry_custom_tooltip
			every_scope_state = {
				add_radicals_in_state = {
					value = large_radicals
				}
				add_modifier = { name = nationalist_agitation months = 60 is_decaying = yes }
			}
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}